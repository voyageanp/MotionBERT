# Unified AlphaPose + MotionBERT environment
FROM nvidia/cuda:11.6.2-cudnn8-devel-ubuntu20.04

ENV DEBIAN_FRONTEND=noninteractive \
    TZ=UTC \
    CUDA_HOME=/usr/local/cuda \
    PYTHONUNBUFFERED=1

# 基本パッケージ
RUN apt-get update && apt-get install -y --no-install-recommends \
    git wget curl ca-certificates \
    ffmpeg \
    build-essential ninja-build cmake pkg-config \
    python3 python3-dev python3-pip python3-tk \
    libyaml-dev \
    libglib2.0-0 libsm6 libxext6 libxrender1 \
    libgl1-mesa-glx mesa-common-dev libosmesa6 libosmesa6-dev libglu1-mesa-dev freeglut3-dev \
    libgomp1 \
 && rm -rf /var/lib/apt/lists/*

# pip 更新
RUN python3 -m pip install --upgrade pip setuptools wheel

# ===== PyTorch を cu116 で導入（バージョン可変） =====
ARG TORCH_VERSION=1.13.1
ARG TORCHVISION_VERSION=0.14.1
ARG TORCHAUDIO_VERSION=0.13.1
ARG CUDA_SUFFIX=cu116
RUN pip install --extra-index-url https://download.pytorch.org/whl/cu116 \
    torch==${TORCH_VERSION}+${CUDA_SUFFIX} \
    torchvision==${TORCHVISION_VERSION}+${CUDA_SUFFIX} \
    torchaudio==${TORCHAUDIO_VERSION}+${CUDA_SUFFIX}

# 共通 Python 依存
RUN pip install \
    # ---- AlphaPose 側 ----
    cython pycocotools yacs scipy \
    opencv-contrib-python-headless imageio-ffmpeg matplotlib \
    # ---- MotionBERT 側 ----
    tensorboardX tqdm easydict prettytable \
    roma ipdb pytorch-metric-learning \
    "smplx[all]" \
    # ---- 両者で使う便利ツール ----
    jupyter jupyterlab ipywidgets \
    gdown boto3 \
    # AlphaPose の bbox 拡張（numpy>=1.20 対応パッチ版）
    git+https://github.com/H4dr1en/cython_bbox.git@patch-1

# ソース配置
WORKDIR /opt/src

# HalpeCOCOAPI + AlphaPose
RUN git clone https://github.com/HaoyiZhu/HalpeCOCOAPI.git && \
    git clone https://github.com/MVIG-SJTU/AlphaPose.git

# HalpeCOCOAPI インストール
WORKDIR /opt/src/HalpeCOCOAPI/PythonAPI
RUN python3 setup.py build_ext --inplace && pip install -e .

# AlphaPose ビルド（CUDA 拡張）
ENV TORCH_CUDA_ARCH_LIST="6.1;7.0;7.5;8.0;8.6" \
    PATH=/usr/local/cuda/bin:$PATH \
    LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
WORKDIR /opt/src/AlphaPose
RUN pip install -e .

# 事前に torchvision の重みを落としたい場合（任意）
# ARG PRELOAD_TORCHVISION=0
# RUN if [ "$PRELOAD_TORCHVISION" = "1" ]; then \
# python3 - <<'PY'
# import torchvision.models as tm
# _ = tm.resnet152(weights=tm.ResNet152_Weights.DEFAULT)
# PY
# fi

# AlphaPose の重みを取得したい場合（任意）
ARG DOWNLOAD_WEIGHTS=0
RUN if [ "$DOWNLOAD_WEIGHTS" = "1" ]; then \
    mkdir -p detector/yolo/data pretrained_models && \
    gdown 1D47msNOOiJKvPOXlnpyzdKA3k6E97NTC -O detector/yolo/data/yolov3-spp.weights && \
    gdown 1S-ROA28de-1zvLv-hVfPFJ5tFBYOSITb -O pretrained_models/halpe26_fast_res50_256x192.pth ; \
    fi

# 作業用ディレクトリと PYTHONPATH
WORKDIR /workspace
ENV PYTHONPATH=/workspace:/opt/src

# 動作確認（任意）
# RUN python3 -c "import torch, torchvision, smplx; print(torch.__version__, torch.version.cuda)"

CMD ["/bin/bash"]